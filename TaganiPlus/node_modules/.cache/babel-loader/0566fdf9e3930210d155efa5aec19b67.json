{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\greem\\\\moscord\\\\moscord\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_DRINKS_REQUEST, GET_DRINKS_FAILED, GET_DRINKS_SUCCESS } from '../../constants/drinks';\nimport { getLocalStorage } from '../../utils/localStorage';\nvar initialState = {\n  loading: false,\n  error: false,\n  data: getLocalStorage('drinksList') ? JSON.parse(localStorage.getItem('drinksList')) : []\n};\n\nvar drinksList = function drinksList() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_DRINKS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        error: null\n      });\n\n    case GET_DRINKS_FAILED:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload\n      });\n\n    case GET_DRINKS_SUCCESS:\n      var drinks = getLocalStorage('drinksList') ? JSON.parse(localStorage.getItem('drinksList')) : [];\n      var filteredDrinkList = drinks;\n\n      if (action.payload.year && action.payload.year !== 'all') {\n        filteredDrinkList = filteredDrinkList.filter(function (x) {\n          return parseInt(x.yearMade) === parseInt(action.payload.year);\n        });\n      }\n\n      if (action.payload.name) {\n        filteredDrinkList = filteredDrinkList.filter(function (x) {\n          return x.drinkName.toLowerCase().includes(action.payload.name.toLowerCase());\n        });\n      }\n\n      if (action.payload.vineyard && action.payload.vineyard !== 'all') {\n        filteredDrinkList = filteredDrinkList.filter(function (x) {\n          return x.vineyard === action.payload.vineyard;\n        });\n      }\n\n      if (action.payload.sortOrder) {\n        console.log('inside');\n\n        if (action.payload.sortOrder === 'vineyardDescending') {\n          filteredDrinkList = filteredDrinkList.sort(function (a, b) {\n            var nameA = a.vineyard.toUpperCase();\n            var nameB = b.vineyard.toUpperCase();\n\n            if (nameA > nameB) {\n              return -1;\n            }\n\n            if (nameA < nameB) {\n              return 1;\n            }\n\n            return 0;\n          });\n        } else if (action.payload.sortOrder === 'vineyardAscending') {\n          filteredDrinkList = filteredDrinkList.sort(function (a, b) {\n            var nameA = a.vineyard.toUpperCase();\n            var nameB = b.vineyard.toUpperCase();\n\n            if (nameA < nameB) {\n              return -1;\n            }\n\n            if (nameA > nameB) {\n              return 1;\n            }\n\n            return 0;\n          });\n        } else if (action.payload.sortOrder === 'yearDescending') {\n          filteredDrinkList = filteredDrinkList.sort(function (a, b) {\n            var nameA = parseInt(a.yearMade);\n            var nameB = parseInt(b.yearMade);\n\n            if (nameA > nameB) {\n              return -1;\n            }\n\n            if (nameA < nameB) {\n              return 1;\n            }\n\n            return 0;\n          });\n        } else if (action.payload.sortOrder === 'yearAscending') {\n          filteredDrinkList = filteredDrinkList.sort(function (a, b) {\n            var nameA = parseInt(a.yearMade);\n            var nameB = parseInt(b.yearMade);\n\n            if (nameA < nameB) {\n              return -1;\n            }\n\n            if (nameA > nameB) {\n              return 1;\n            }\n\n            return 0;\n          });\n        }\n      }\n\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        error: false,\n        data: filteredDrinkList\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default drinksList;","map":{"version":3,"sources":["C:\\Users\\greem\\moscord\\moscord\\src\\reducers\\drinks\\drinksList.js"],"names":["GET_DRINKS_REQUEST","GET_DRINKS_FAILED","GET_DRINKS_SUCCESS","getLocalStorage","initialState","loading","error","data","JSON","parse","localStorage","getItem","drinksList","state","action","type","success","payload","drinks","filteredDrinkList","year","filter","x","parseInt","yearMade","name","drinkName","toLowerCase","includes","vineyard","sortOrder","console","log","sort","a","b","nameA","toUpperCase","nameB"],"mappings":"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","sourcesContent":["import { GET_DRINKS_REQUEST, GET_DRINKS_FAILED, GET_DRINKS_SUCCESS } from '../../constants/drinks'\r\nimport { getLocalStorage } from '../../utils/localStorage'\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: false,\r\n    data: getLocalStorage('drinksList') ? JSON.parse(localStorage.getItem('drinksList')) : [],\r\n}\r\n\r\n\r\nconst drinksList = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DRINKS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                error: null,\r\n            }\r\n        case GET_DRINKS_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_DRINKS_SUCCESS:\r\n\r\n            let drinks = getLocalStorage('drinksList') ? JSON.parse(localStorage.getItem('drinksList')) : []\r\n            let filteredDrinkList = drinks\r\n\r\n            if(action.payload.year && action.payload.year !== 'all'){\r\n                filteredDrinkList = filteredDrinkList.filter(x=> parseInt(x.yearMade) === parseInt(action.payload.year))\r\n            }\r\n\r\n            if(action.payload.name){\r\n                filteredDrinkList = filteredDrinkList.filter(x=>x.drinkName.toLowerCase().includes(action.payload.name.toLowerCase()))\r\n            }\r\n\r\n            if(action.payload.vineyard && action.payload.vineyard !== 'all'){\r\n                filteredDrinkList = filteredDrinkList.filter(x=>x.vineyard === action.payload.vineyard)\r\n            }\r\n\r\n            if(action.payload.sortOrder) {\r\n                console.log('inside')\r\n                if(action.payload.sortOrder === 'vineyardDescending'){\r\n                 filteredDrinkList =  filteredDrinkList.sort((a,b) =>  {\r\n                        var nameA = a.vineyard.toUpperCase(); \r\n                        var nameB = b.vineyard.toUpperCase(); \r\n                       \r\n                        if (nameA > nameB) {\r\n                            return -1;\r\n                        }\r\n                        if (nameA < nameB) {\r\n                            return 1;\r\n                        }\r\n\r\n                        return 0;\r\n                })\r\n\r\n                }else if(action.payload.sortOrder === 'vineyardAscending'){\r\n                filteredDrinkList =  filteredDrinkList.sort((a,b) =>  {\r\n                        var nameA = a.vineyard.toUpperCase(); \r\n                        var nameB = b.vineyard.toUpperCase(); \r\n                       \r\n                        if (nameA < nameB) {\r\n                            return -1;\r\n                        }\r\n                        if (nameA > nameB) {\r\n                            return 1;\r\n                        }\r\n\r\n                        return 0;\r\n                })\r\n                }else if(action.payload.sortOrder === 'yearDescending'){\r\n                    filteredDrinkList =  filteredDrinkList.sort((a,b) =>  {\r\n                            var nameA = parseInt(a.yearMade); \r\n                            var nameB = parseInt(b.yearMade); \r\n                        \r\n                            if (nameA > nameB) {\r\n                                return -1;\r\n                            }\r\n                            if (nameA < nameB) {\r\n                                return 1;\r\n                            }\r\n\r\n                            return 0;\r\n                    })\r\n\r\n                }\r\n                else if(action.payload.sortOrder === 'yearAscending'){\r\n                        filteredDrinkList =  filteredDrinkList.sort((a,b) =>  {\r\n                        var nameA = parseInt(a.yearMade); \r\n                        var nameB = parseInt(b.yearMade); \r\n                       \r\n                        if (nameA < nameB) {\r\n                            return -1;\r\n                        }\r\n                        if (nameA > nameB) {\r\n                            return 1;\r\n                        }\r\n\r\n                        return 0;\r\n                   })\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                error: false,\r\n                data: filteredDrinkList\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default drinksList"]},"metadata":{},"sourceType":"module"}