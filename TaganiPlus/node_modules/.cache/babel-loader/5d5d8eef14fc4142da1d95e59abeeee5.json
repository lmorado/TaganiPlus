{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\greem\\\\moscord\\\\moscord\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_DRINK_REQUEST, GET_DRINK_FAILED, GET_DRINK_SUCCESS } from '../../constants/drinks';\nimport { getLocalStorage } from '../../utils/localStorage';\nvar initialState = {\n  loading: false,\n  error: false,\n  data: {}\n};\n\nvar drink = function drink() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_DRINK_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        error: null\n      });\n\n    case GET_DRINK_FAILED:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload\n      });\n\n    case GET_DRINK_SUCCESS:\n      var drinks = getLocalStorage('drinksList') ? JSON.parse(localStorage.getItem('drinksList')) : [];\n      var filteredDrinkList = drinks;\n\n      if (action.payload) {\n        filteredDrinkList = filteredDrinkList.filter(function (x) {\n          return parseInt(action.payload) === parseInt(x.id);\n        });\n      }\n\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        error: false,\n        data: filteredDrinkList.length > 0 ? filteredDrinkList[0] : {}\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default drink;","map":{"version":3,"sources":["C:\\Users\\greem\\moscord\\moscord\\src\\reducers\\drinks\\drink.js"],"names":["GET_DRINK_REQUEST","GET_DRINK_FAILED","GET_DRINK_SUCCESS","getLocalStorage","initialState","loading","error","data","drink","state","action","type","success","payload","drinks","JSON","parse","localStorage","getItem","filteredDrinkList","filter","x","parseInt","id","length"],"mappings":";AAAA,SAASA,iBAAT,EAA4BC,gBAA5B,EAA8CC,iBAA9C,QAAuE,wBAAvE;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,KAAK,EAAE,KAFU;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAArB;;AAOA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,iBAAL;AACI,+BACOS,KADP;AAEIJ,QAAAA,OAAO,EAAE,IAFb;AAGIO,QAAAA,OAAO,EAAE,KAHb;AAIIN,QAAAA,KAAK,EAAE;AAJX;;AAMJ,SAAKL,gBAAL;AACI,+BACOQ,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,KAAK,EAAEI,MAAM,CAACG;AAHlB;;AAKJ,SAAKX,iBAAL;AAEI,UAAIY,MAAM,GAAGX,eAAe,CAAC,YAAD,CAAf,GAAgCY,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAhC,GAAiF,EAA9F;AACA,UAAIC,iBAAiB,GAAGL,MAAxB;;AAEA,UAAGJ,MAAM,CAACG,OAAV,EAAmB;AACfM,QAAAA,iBAAiB,GAAGA,iBAAiB,CAACC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,iBAAGC,QAAQ,CAACZ,MAAM,CAACG,OAAR,CAAR,KAA6BS,QAAQ,CAACD,CAAC,CAACE,EAAH,CAAxC;AAAA,SAA1B,CAApB;AACH;;AAED,+BACOd,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIO,QAAAA,OAAO,EAAE,IAHb;AAIIN,QAAAA,KAAK,EAAE,KAJX;AAKIC,QAAAA,IAAI,EAAEY,iBAAiB,CAACK,MAAlB,GAA2B,CAA3B,GAA+BL,iBAAiB,CAAC,CAAD,CAAhD,GAAsD;AALhE;;AAQJ;AACI,aAAOV,KAAP;AAhCR;AAkCH,CAnCD;;AAqCA,eAAeD,KAAf","sourcesContent":["import { GET_DRINK_REQUEST, GET_DRINK_FAILED, GET_DRINK_SUCCESS } from '../../constants/drinks'\r\nimport { getLocalStorage } from '../../utils/localStorage'\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: false,\r\n    data: {}\r\n}\r\n\r\n\r\nconst drink = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DRINK_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                error: null,\r\n            }\r\n        case GET_DRINK_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_DRINK_SUCCESS:\r\n\r\n            let drinks = getLocalStorage('drinksList') ? JSON.parse(localStorage.getItem('drinksList')) : []\r\n            let filteredDrinkList = drinks\r\n         \r\n            if(action.payload) {\r\n                filteredDrinkList = filteredDrinkList.filter(x=> parseInt(action.payload) === parseInt(x.id))\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                error: false,\r\n                data: filteredDrinkList.length > 0 ? filteredDrinkList[0] : {}\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default drink"]},"metadata":{},"sourceType":"module"}