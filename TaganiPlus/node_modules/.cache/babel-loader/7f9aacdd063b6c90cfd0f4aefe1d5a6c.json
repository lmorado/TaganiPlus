{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\greem\\\\moscord\\\\moscord\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\greem\\\\moscord\\\\moscord\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { GET_DRINKS_VINEYARD_REQUEST, GET_DRINKS_VINEYARD_FAILED, GET_DRINKS_VINEYARD_SUCCESS } from '../../constants/drinks';\nimport { getLocalStorage } from '../../utils/localStorage';\nvar drinkList = getLocalStorage('drinksList') ? JSON.parse(localStorage.getItem('drinksList')) : [];\nvar vineyardItems = [];\nvineyardItems = drinkList.map(function (x) {\n  return x.vineyard;\n});\nvar initialState = {\n  loading: false,\n  error: false,\n  data: _toConsumableArray(new Set(vineyardItems))\n};\n\nvar vineyardList = function vineyardList() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_DRINKS_VINEYARD_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        error: null\n      });\n\n    case GET_DRINKS_VINEYARD_FAILED:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload\n      });\n\n    case GET_DRINKS_VINEYARD_SUCCESS:\n      var drinks = getLocalStorage('drinksList') ? JSON.parse(localStorage.getItem('drinksList')) : [];\n      var _vineyardList = [];\n      _vineyardList = drinks.map(function (x) {\n        return x.vineyard;\n      });\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        error: false,\n        data: _toConsumableArray(new Set(_vineyardList))\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default vineyardList;","map":{"version":3,"sources":["C:\\Users\\greem\\moscord\\moscord\\src\\reducers\\drinks\\vineyardList.js"],"names":["GET_DRINKS_VINEYARD_REQUEST","GET_DRINKS_VINEYARD_FAILED","GET_DRINKS_VINEYARD_SUCCESS","getLocalStorage","drinkList","JSON","parse","localStorage","getItem","vineyardItems","map","x","vineyard","initialState","loading","error","data","Set","vineyardList","state","action","type","success","payload","drinks"],"mappings":";;AAAA,SAASA,2BAAT,EAAsCC,0BAAtC,EAAkEC,2BAAlE,QAAqG,wBAArG;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,IAAIC,SAAS,GAAGD,eAAe,CAAC,YAAD,CAAf,GAAgCE,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAhC,GAAiF,EAAjG;AACA,IAAIC,aAAa,GAAG,EAApB;AAEAA,aAAa,GAAGL,SAAS,CAACM,GAAV,CAAc,UAAAC,CAAC,EAAG;AAC9B,SAAOA,CAAC,CAACC,QAAT;AACH,CAFe,CAAhB;AAIA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,KAAK,EAAE,KAFU;AAGjBC,EAAAA,IAAI,qBAAM,IAAIC,GAAJ,CAAQR,aAAR,CAAN;AAHa,CAArB;;AAOA,IAAMS,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKrB,2BAAL;AACI,+BACOmB,KADP;AAEIL,QAAAA,OAAO,EAAE,IAFb;AAGIQ,QAAAA,OAAO,EAAE,KAHb;AAIIP,QAAAA,KAAK,EAAE;AAJX;;AAMJ,SAAKd,0BAAL;AACI,+BACOkB,KADP;AAEIL,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,KAAK,EAAEK,MAAM,CAACG;AAHlB;;AAKJ,SAAKrB,2BAAL;AAEI,UAAIsB,MAAM,GAAGrB,eAAe,CAAC,YAAD,CAAf,GAAgCE,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAhC,GAAiF,EAA9F;AACA,UAAIU,aAAY,GAAG,EAAnB;AAEAA,MAAAA,aAAY,GAAGM,MAAM,CAACd,GAAP,CAAW,UAAAC,CAAC,EAAG;AAC1B,eAAOA,CAAC,CAACC,QAAT;AACH,OAFc,CAAf;AAIA,+BACOO,KADP;AAEIL,QAAAA,OAAO,EAAE,KAFb;AAGIQ,QAAAA,OAAO,EAAE,IAHb;AAIIP,QAAAA,KAAK,EAAE,KAJX;AAKIC,QAAAA,IAAI,qBAAM,IAAIC,GAAJ,CAAQC,aAAR,CAAN;AALR;;AAQJ;AACI,aAAOC,KAAP;AAhCR;AAkCH,CAnCD;;AAqCA,eAAeD,YAAf","sourcesContent":["import { GET_DRINKS_VINEYARD_REQUEST, GET_DRINKS_VINEYARD_FAILED, GET_DRINKS_VINEYARD_SUCCESS } from '../../constants/drinks'\r\nimport { getLocalStorage } from '../../utils/localStorage'\r\n\r\nlet drinkList = getLocalStorage('drinksList') ? JSON.parse(localStorage.getItem('drinksList')) : []\r\nlet vineyardItems = []\r\n\r\nvineyardItems = drinkList.map(x=> {\r\n    return x.vineyard\r\n})\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: false,\r\n    data: [...new Set(vineyardItems)],\r\n}\r\n\r\n\r\nconst vineyardList = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DRINKS_VINEYARD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                error: null,\r\n            }\r\n        case GET_DRINKS_VINEYARD_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_DRINKS_VINEYARD_SUCCESS:\r\n\r\n            let drinks = getLocalStorage('drinksList') ? JSON.parse(localStorage.getItem('drinksList')) : []\r\n            let vineyardList = []\r\n\r\n            vineyardList = drinks.map(x=> {\r\n                return x.vineyard\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                error: false,\r\n                data: [...new Set(vineyardList)]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default vineyardList"]},"metadata":{},"sourceType":"module"}